version: "3"
services:

  mongo:
    image: mongo:3.3
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.2"
          memory: 150M
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      restart_policy:
        condition: on-failure

    ports:
      - "27017:27017"
    networks:
      - webnet




  backend:
    depends_on:
      - mongo
    # replace username/repo:tag with your name and image details
    image: hasandevops/khdb:1.7
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.2"
          memory: 200M
      update_config:
          parallelism: 1
          delay: 10s
          failure_action: rollback

    ports:
      - "3001:3000"
    networks:
      - webnet


  frontclient:
    # replace username/repo:tag with your name and image details
    image: hasandevops/khdfcr:1.0
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.2"
          memory: 50M
      update_config:
          parallelism: 1
          delay: 10s
          failure_action: rollback
    ports:
      - "80:80"
    networks:
      - webnet



  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet


networks:
  webnet:
